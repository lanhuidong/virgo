apply plugin: "idea"

idea {
    project {
        jdkName = JavaVersion.VERSION_1_8
        languageLevel = JavaVersion.VERSION_1_8
    }
}

def springVersion = '4.2.6.RELEASE'
def springSecurityVersion = '4.1.0.RELEASE'
def logbackVersion = '1.1.7'
def slf4jVersion = '1.7.21'
def easymockVersion = '3.4'
def junitVersion = '4+'
def HikariCPVersion = '2.4.6'
def mysqlConnectorJavaVersion = '5.1.31'
def hibernateValidatorVersion = '5.2.4.Final'
def mybatisVersion = '3.4.0'
def mybatisSpringVersion = '1.3.0'
def jacksonVersion = '2.7.4'
def freemarkVersion = '2.3.23'
def jsonpathVersion = '0.9.1'
def commonslangVersion = '3.4'

allprojects {
    apply plugin: 'java'
    group = 'com.virgo'
    version = '2.2.3'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

subprojects {
    repositories {
        mavenCentral()
    }
    configurations {
        all*.exclude group: 'commons-logging', module: 'commons-logging'
    }
    dependencies {
        compile "org.springframework:spring-context-support:$springVersion"
        compile("org.springframework.security:spring-security-web:$springSecurityVersion") {
            exclude group: "org.springframework", module: "spring-web"
        }
        compile "org.springframework.security:spring-security-config:$springSecurityVersion"
        compile "org.apache.commons:commons-lang3:$commonslangVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "ch.qos.logback:logback-classic:$logbackVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
        testCompile "org.springframework:spring-test:$springVersion"
        testCompile "org.easymock:easymock:$easymockVersion"
        testCompile "junit:junit:$junitVersion"
    }
}

project(':virgo-data') {

    dependencies {
        compile "mysql:mysql-connector-java:$mysqlConnectorJavaVersion"
        compile "com.zaxxer:HikariCP:$HikariCPVersion"
        compile "org.mybatis:mybatis:$mybatisVersion"
        compile "org.mybatis:mybatis-spring:$mybatisSpringVersion"
        compile "org.springframework:spring-orm:$springVersion"
        compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    }

    task createProject << {
        sourceSets*.allSource.srcDirs*.each { it.mkdirs() }
        println 'Project ' + name + ' created'
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

project(':virgo-web') {
    apply plugin: 'war'
    repositories {
        jcenter()
    }
    apply plugin: 'org.akhikhl.gretty'

    gretty {
        servletContainer = 'tomcat8'
        httpPort = 8080
        contextPath = '/'
    }

    dependencies {
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.freemarker:freemarker:$freemarkVersion"
        testCompile "com.jayway.jsonpath:json-path:$jsonpathVersion"
        compile project(':virgo-data')
    }
    task createProject << {
        sourceSets*.allSource.srcDirs*.each { it.mkdirs() }
        def webAppDir = file("$webAppDirName")
        webAppDir.mkdirs()
        println 'Project ' + name + ' created'
    }
}